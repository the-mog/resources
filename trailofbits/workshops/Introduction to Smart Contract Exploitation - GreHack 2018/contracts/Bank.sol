pragma solidity ^0.4.24;

contract Bank {
    mapping (address => uint) tokens;
    
    // Return the balance of the user
    function getBalance(address user) view public returns(uint) {
        return tokens[user];
    }

    // Buy tokens
    function buy() payable public{	
        tokens[msg.sender] += msg.value;
    }   

    // Exchange the token for ether
    function withdraw() public{
        // Retrieve the user balance
        uint balance = tokens[msg.sender];
        // Send the balance to 0
        tokens[msg.sender] = 0;
        // Send the ether equivalent of the balance 
        msg.sender.transfer(balance);
    }
    
    // Send tokens to another user
    function transfer(address to, uint amount) public{
        tokens[to] += amount;
        tokens[msg.sender] -= amount;
    }
    
}
