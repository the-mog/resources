[seq,
  [mstore, 28, [calldataload, 0]],
  [mstore, 32, 1461501637330902918203684832716283019655932542976],
  [mstore, 64, 170141183460469231731687303715884105727],
  [mstore, 96, -170141183460469231731687303715884105728],
  [mstore, 128, 1701411834604692317316873037158841057270000000000],
  [mstore, 160, -1701411834604692317316873037158841057280000000000],
  # Line 120
  [codecopy, 320, ~codelen, 288],
  [assert, [iszero, callvalue]],
  /* checking int128 input */
  [clamp,
    [mload, 96],
    [codeload, ~codelen],
    [mload, 64]],
  /* checking int128 input */
  [clamp,
    [mload, 96],
    [codeload, [add, ~codelen, 32]],
    [mload, 64]],
  /* checking int128 input */
  [clamp,
    [mload, 96],
    [codeload, [add, ~codelen, 64]],
    [mload, 64]],
  /* checking address input */
  [uclamplt,
    [codeload, [add, ~codelen, 96]],
    [mload, 32]],
  /* checking address input */
  [uclamplt,
    [codeload, [add, ~codelen, 128]],
    [mload, 32]],
  /* checking address input */
  [uclamplt,
    [codeload, [add, ~codelen, 160]],
    [mload, 32]],
  /* checking int128 input */
  [clamp,
    [mload, 96],
    [codeload, [add, ~codelen, 256]],
    [mload, 64]],
  # Line 127
  [sstore, 21 <self.EPOCH_LENGTH>, [mload, 320 <epoch_length>]],
  # Line 128
  [sstore, 22 <self.WITHDRAWAL_DELAY>, [mload, 352 <withdrawal_delay>]],
  # Line 129
  [sstore, 23 <self.DYNASTY_LOGOUT_DELAY>, [mload, 384 <dynasty_logout_delay>]],
  # Line 130
  [sstore, 24 <self.OWNER>, [mload, 416 <owner>]],
  # Line 131
  [sstore, 27 <self.BASE_INTEREST_FACTOR>, [mload, 512 <base_interest_factor>]],
  # Line 132
  [sstore, 28 <self.BASE_PENALTY_FACTOR>, [mload, 544 <base_penalty_factor>]],
  # Line 133
  [sstore, 29 <self.MIN_DEPOSIT_SIZE>, [mload, 576 <min_deposit_size>]],
  # Line 136
  [sstore, 25 <self.SIGHASHER>, [mload, 448 <sighasher>]],
  # Line 137
  [sstore, 26 <self.PURITY_CHECKER>, [mload, 480 <purity_checker>]],
  # Line 140
  [sstore, 2 <self.next_validator_index>, 1],
  # Line 142
  [sstore, [sha3_32, 12 <self.deposit_scale_factor>], 100000000000000000000],
  # Line 143
  [sstore, 4 <self.dynasty>, 0],
  # Line 144
  [sstore,
    15 <self.current_epoch>,
    [if,
      # Line 144
      [slt,
        [clamp,
          [mload, 160],
          [sdiv,
            [mul, number, 10000000000],
            [clamp_nonzero, [sload, 21 <self.EPOCH_LENGTH>]]],
          [mload, 128]],
        0],
      [sdiv,
        [sub,
          [clamp,
            [mload, 160],
            [sdiv,
              [mul, number, 10000000000],
              [clamp_nonzero, [sload, 21 <self.EPOCH_LENGTH>]]],
            [mload, 128]],
          9999999999],
        10000000000],
      [sdiv,
        [clamp,
          [mload, 160],
          [sdiv,
            [mul, number, 10000000000],
            [clamp_nonzero, [sload, 21 <self.EPOCH_LENGTH>]]],
          [mload, 128]],
        10000000000]]],
  # Line 145
  [sstore, 6 <self.total_curdyn_deposits>, 0],
  # Line 146
  [sstore, 7 <self.total_prevdyn_deposits>, 0],
  # Line 147
  [sstore, 30 <self.DEFAULT_END_DYNASTY>, 1000000000000000000000000000000],
  [return,
    0,
    [lll,
      [seq,
        [mstore, 28, [calldataload, 0]],
        [mstore, 32, 1461501637330902918203684832716283019655932542976],
        [mstore, 64, 170141183460469231731687303715884105727],
        [mstore, 96, -170141183460469231731687303715884105728],
        [mstore, 128, 1701411834604692317316873037158841057270000000000],
        [mstore, 160, -1701411834604692317316873037158841057280000000000],
        # Line 151
        [if,
          [eq, [mload, 0], 937364392 <main_hash_voted_frac>],
          [seq,
            [assert, [iszero, callvalue]],
            # Line 154
            [mstore,
              0,
              [with,
                _l,
                [clamp,
                  [mload, 160],
                  [with,
                    l,
                    [sload,
                      [add,
                        [sha3_32, [sha3_32, [add, [sha3_32, 10 <self.votes>], [sload, 15 <self.current_epoch>]]]],
                        [sload, 19 <self.expected_source_epoch>]]],
                    [with,
                      r,
                      [clamp_nonzero, [sload, 6 <self.total_curdyn_deposits>]],
                      [sdiv, [mul, l, 10000000000], r]]],
                  [mload, 128]],
                [with,
                  _r,
                  [clamp,
                    [mload, 160],
                    [with,
                      l,
                      [sload,
                        [add,
                          [sha3_32,
                            [add,
                              [sha3_32, [add, [sha3_32, 10 <self.votes>], [sload, 15 <self.current_epoch>]]],
                              3 <prev_dyn_votes>]],
                          [sload, 19 <self.expected_source_epoch>]]],
                      [with,
                        r,
                        [clamp_nonzero, [sload, 7 <self.total_prevdyn_deposits>]],
                        [sdiv, [mul, l, 10000000000], r]]],
                    [mload, 128]],
                  [if, [sgt, _l, _r], _r, _l]]]],
            [return, 0, 32],
            # Line 151
            stop]],
        # Line 158
        [if,
          [eq, [mload, 0], 2583387884 <deposit_size>],
          [seq,
            [calldatacopy, 320, 4, 32],
            [assert, [iszero, callvalue]],
            /* checking int128 input */
            [clamp,
              [mload, 96],
              [calldataload, 4],
              [mload, 64]],
            # Line 161
            [mstore,
              0,
              [if,
                [slt,
                  [clamp,
                    [mload, 160],
                    [with,
                      r,
                      [sload,
                        [add,
                          [sha3_32, 12 <self.deposit_scale_factor>],
                          [sload, 15 <self.current_epoch>]]],
                      [with,
                        l,
                        [sload,
                          [add,
                            [sha3_32, [add, [sha3_32, 0 <self.validators>], [mload, 320 <validator_index>]]],
                            1 <deposit>]],
                        [with,
                          ans,
                          [mul, l, r],
                          [seq,
                            [assert, [or, [eq, [sdiv, ans, l], r], [not, l]]],
                            [sdiv, ans, 10000000000]]]]],
                    [mload, 128]],
                  0],
                [sdiv,
                  [sub,
                    [clamp,
                      [mload, 160],
                      [with,
                        r,
                        [sload,
                          [add,
                            [sha3_32, 12 <self.deposit_scale_factor>],
                            [sload, 15 <self.current_epoch>]]],
                        [with,
                          l,
                          [sload,
                            [add,
                              [sha3_32, [add, [sha3_32, 0 <self.validators>], [mload, 320 <validator_index>]]],
                              1 <deposit>]],
                          [with,
                            ans,
                            [mul, l, r],
                            [seq,
                              [assert, [or, [eq, [sdiv, ans, l], r], [not, l]]],
                              [sdiv, ans, 10000000000]]]]],
                      [mload, 128]],
                    9999999999],
                  10000000000],
                [sdiv,
                  [clamp,
                    [mload, 160],
                    [with,
                      r,
                      [sload,
                        [add,
                          [sha3_32, 12 <self.deposit_scale_factor>],
                          [sload, 15 <self.current_epoch>]]],
                      [with,
                        l,
                        [sload,
                          [add,
                            [sha3_32, [add, [sha3_32, 0 <self.validators>], [mload, 320 <validator_index>]]],
                            1 <deposit>]],
                        [with,
                          ans,
                          [mul, l, r],
                          [seq,
                            [assert, [or, [eq, [sdiv, ans, l], r], [not, l]]],
                            [sdiv, ans, 10000000000]]]]],
                    [mload, 128]],
                  10000000000]]],
            [return, 0, 32],
            # Line 158
            stop]],
        # Line 164
        [if,
          [eq, [mload, 0], 2396075952 <total_curdyn_deposits_scaled>],
          [seq,
            [assert, [iszero, callvalue]],
            # Line 167
            [mstore,
              0,
              [if,
                [slt,
                  [clamp,
                    [mload, 160],
                    [with,
                      r,
                      [sload,
                        [add,
                          [sha3_32, 12 <self.deposit_scale_factor>],
                          [sload, 15 <self.current_epoch>]]],
                      [with,
                        l,
                        [sload, 6 <self.total_curdyn_deposits>],
                        [with,
                          ans,
                          [mul, l, r],
                          [seq,
                            [assert, [or, [eq, [sdiv, ans, l], r], [not, l]]],
                            [sdiv, ans, 10000000000]]]]],
                    [mload, 128]],
                  0],
                [sdiv,
                  [sub,
                    [clamp,
                      [mload, 160],
                      [with,
                        r,
                        [sload,
                          [add,
                            [sha3_32, 12 <self.deposit_scale_factor>],
                            [sload, 15 <self.current_epoch>]]],
                        [with,
                          l,
                          [sload, 6 <self.total_curdyn_deposits>],
                          [with,
                            ans,
                            [mul, l, r],
                            [seq,
                              [assert, [or, [eq, [sdiv, ans, l], r], [not, l]]],
                              [sdiv, ans, 10000000000]]]]],
                      [mload, 128]],
                    9999999999],
                  10000000000],
                [sdiv,
                  [clamp,
                    [mload, 160],
                    [with,
                      r,
                      [sload,
                        [add,
                          [sha3_32, 12 <self.deposit_scale_factor>],
                          [sload, 15 <self.current_epoch>]]],
                      [with,
                        l,
                        [sload, 6 <self.total_curdyn_deposits>],
                        [with,
                          ans,
                          [mul, l, r],
                          [seq,
                            [assert, [or, [eq, [sdiv, ans, l], r], [not, l]]],
                            [sdiv, ans, 10000000000]]]]],
                    [mload, 128]],
                  10000000000]]],
            [return, 0, 32],
            # Line 164
            stop]],
        # Line 170
        [if,
          [eq, [mload, 0], 2247379592 <total_prevdyn_deposits_scaled>],
          [seq,
            [assert, [iszero, callvalue]],
            # Line 173
            [mstore,
              0,
              [if,
                [slt,
                  [clamp,
                    [mload, 160],
                    [with,
                      r,
                      [sload,
                        [add,
                          [sha3_32, 12 <self.deposit_scale_factor>],
                          [sload, 15 <self.current_epoch>]]],
                      [with,
                        l,
                        [sload, 7 <self.total_prevdyn_deposits>],
                        [with,
                          ans,
                          [mul, l, r],
                          [seq,
                            [assert, [or, [eq, [sdiv, ans, l], r], [not, l]]],
                            [sdiv, ans, 10000000000]]]]],
                    [mload, 128]],
                  0],
                [sdiv,
                  [sub,
                    [clamp,
                      [mload, 160],
                      [with,
                        r,
                        [sload,
                          [add,
                            [sha3_32, 12 <self.deposit_scale_factor>],
                            [sload, 15 <self.current_epoch>]]],
                        [with,
                          l,
                          [sload, 7 <self.total_prevdyn_deposits>],
                          [with,
                            ans,
                            [mul, l, r],
                            [seq,
                              [assert, [or, [eq, [sdiv, ans, l], r], [not, l]]],
                              [sdiv, ans, 10000000000]]]]],
                      [mload, 128]],
                    9999999999],
                  10000000000],
                [sdiv,
                  [clamp,
                    [mload, 160],
                    [with,
                      r,
                      [sload,
                        [add,
                          [sha3_32, 12 <self.deposit_scale_factor>],
                          [sload, 15 <self.current_epoch>]]],
                      [with,
                        l,
                        [sload, 7 <self.total_prevdyn_deposits>],
                        [with,
                          ans,
                          [mul, l, r],
                          [seq,
                            [assert, [or, [eq, [sdiv, ans, l], r], [not, l]]],
                            [sdiv, ans, 10000000000]]]]],
                    [mload, 128]],
                  10000000000]]],
            [return, 0, 32],
            # Line 170
            stop]],
        # Line 177
        [if,
          [eq, [mload, 0], 284313141 <recommended_source_epoch>],
          [seq,
            [assert, [iszero, callvalue]],
            # Line 180
            [mstore, 0, [sload, 19 <self.expected_source_epoch>]],
            [return, 0, 32],
            # Line 177
            stop]],
        # Line 183
        [if,
          [eq, [mload, 0], 2237609772 <recommended_target_hash>],
          [seq,
            [assert, [iszero, callvalue]],
            # Line 186
            [mstore,
              0,
              [blockhash,
                [uclamplt,
                  [clampge,
                    [clamp,
                      [mload, 96],
                      [sub,
                        [clamp,
                          [mload, 96],
                          [mul, [sload, 15 <self.current_epoch>], [sload, 21 <self.EPOCH_LENGTH>]],
                          [mload, 64]],
                        1],
                      [mload, 64]],
                    [sub, number, 256]],
                  number]]],
            [return, 0, 32],
            # Line 183
            stop]],
        # Line 189
        [if,
          [eq, [mload, 0], 3732904309 <deposit_exists>],
          [seq,
            [assert, [iszero, callvalue]],
            [assert, [eq, caller, address]],
            # Line 192
            [mstore,
              0,
              [and,
                [sgt, [sload, 6 <self.total_curdyn_deposits>], 0],
                [sgt, [sload, 7 <self.total_prevdyn_deposits>], 0]]],
            [return, 0, 32],
            # Line 189
            stop]],
        # Line 199
        [if,
          [eq, [mload, 0], 3532045186 <increment_dynasty>],
          [seq,
            [assert, [iszero, callvalue]],
            [assert, [eq, caller, address]],
            [mstore, 320, [sload, 15 <self.current_epoch>]],
            # Line 203
            [if,
              [sload,
                [add,
                  [sha3_32,
                    [add,
                      [sha3_32, 10 <self.votes>],
                      [clamp, [mload, 96], [sub, [mload, 320 <epoch>], 2], [mload, 64]]]],
                  1 <is_finalized>]],
              # Line 204
              [seq,
                [with,
                  _stloc,
                  4 <self.dynasty>,
                  [sstore, _stloc, [clamp, [mload, 96], [add, [sload, _stloc], 1], [mload, 64]]]],
                # Line 205
                [sstore,
                  7 <self.total_prevdyn_deposits>,
                  [sload, 6 <self.total_curdyn_deposits>]],
                # Line 206
                [with,
                  _stloc,
                  6 <self.total_curdyn_deposits>,
                  [sstore,
                    _stloc,
                    [clamp,
                      [mload, 160],
                      [add,
                        [sload, _stloc],
                        [sload, [add, [sha3_32, 5 <self.dynasty_wei_delta>], [sload, 4 <self.dynasty>]]]],
                      [mload, 128]]]],
                # Line 207
                [sstore,
                  [add, [sha3_32, 8 <self.dynasty_start_epoch>], [sload, 4 <self.dynasty>]],
                  [mload, 320 <epoch>]]]],
            # Line 208
            [sstore,
              [add, [sha3_32, 9 <self.dynasty_in_epoch>], [mload, 320 <epoch>]],
              [sload, 4 <self.dynasty>]],
            # Line 209
            [if,
              [sload, 11 <self.main_hash_justified>],
              # Line 210
              [seq,
                [sstore,
                  19 <self.expected_source_epoch>,
                  [clamp, [mload, 96], [sub, [mload, 320 <epoch>], 1], [mload, 64]]]]],
            # Line 211
            [sstore, 11 <self.main_hash_justified>, 0],
            # Line 199
            stop]],
        # Line 215
        [if,
          [eq, [mload, 0], 2593057911 <esf>],
          [seq,
            [assert, [iszero, callvalue]],
            [assert, [eq, caller, address]],
            # Line 217
            [mstore,
              0,
              [clamp,
                [mload, 96],
                [sub,
                  [sload, 15 <self.current_epoch>],
                  [sload, 16 <self.last_finalized_epoch>]],
                [mload, 64]]],
            [return, 0, 32],
            # Line 215
            stop]],
        # Line 221
        [if,
          [eq, [mload, 0], 2898663875 <collective_reward>],
          [seq,
            [assert, [iszero, callvalue]],
            [assert, [eq, caller, address]],
            [mstore, 320, [sload, 15 <self.current_epoch>]],
            [mstore,
              352,
              [sle,
                [mload,
                  /* Internal Call: esf */
                  [seq,
                    [assert, [call, gas, address, 0, [seq, [mstore, 384, 2593057911], 412], 4, 480, 32]],
                    480]],
                2]],
            # Line 225
            [if,
              [or,
                [iszero,
                  [mload,
                    /* Internal Call: deposit_exists */
                    [seq,
                      [assert, [call, gas, address, 0, [seq, [mstore, 512, 3732904309], 540], 4, 608, 32]],
                      608]]],
                [iszero, [mload, 352 <live>]]],
              # Line 226
              [seq, [mstore, 0, 0], [return, 0, 32]]],
            # Line 221
            [mstore,
              640,
              [clamp,
                [mload, 160],
                [with,
                  l,
                  [sload,
                    [add,
                      [sha3_32,
                        [sha3_32,
                          [add,
                            [sha3_32, 10 <self.votes>],
                            [clamp, [mload, 96], [sub, [mload, 320 <epoch>], 1], [mload, 64]]]]],
                      [sload, 19 <self.expected_source_epoch>]]],
                  [with,
                    r,
                    [clamp_nonzero, [sload, 6 <self.total_curdyn_deposits>]],
                    [sdiv, [mul, l, 10000000000], r]]],
                [mload, 128]]],
            [mstore,
              672,
              [clamp,
                [mload, 160],
                [with,
                  l,
                  [sload,
                    [add,
                      [sha3_32,
                        [add,
                          [sha3_32,
                            [add,
                              [sha3_32, 10 <self.votes>],
                              [clamp, [mload, 96], [sub, [mload, 320 <epoch>], 1], [mload, 64]]]],
                          3 <prev_dyn_votes>]],
                      [sload, 19 <self.expected_source_epoch>]]],
                  [with,
                    r,
                    [clamp_nonzero, [sload, 7 <self.total_prevdyn_deposits>]],
                    [sdiv, [mul, l, 10000000000], r]]],
                [mload, 128]]],
            [mstore,
              704,
              [with,
                _l,
                [mload, 640 <cur_vote_frac>],
                [with, _r, [mload, 672 <prev_vote_frac>], [if, [sgt, _l, _r], _r, _l]]]],
            # Line 231
            [mstore,
              0,
              [clamp,
                [mload, 160],
                [sdiv,
                  [clamp,
                    [mload, 160],
                    [with,
                      r,
                      [sload, 18 <self.reward_factor>],
                      [with,
                        l,
                        [mload, 704 <vote_frac>],
                        [with,
                          ans,
                          [mul, l, r],
                          [seq,
                            [assert, [or, [eq, [sdiv, ans, l], r], [not, l]]],
                            [sdiv, ans, 10000000000]]]]],
                    [mload, 128]],
                  2],
                [mload, 128]]],
            [return, 0, 32],
            # Line 221
            stop]],
        # Line 234
        [if,
          [eq, [mload, 0], 1697049970 <insta_finalize>],
          [seq,
            [assert, [iszero, callvalue]],
            [assert, [eq, caller, address]],
            [mstore, 320, [sload, 15 <self.current_epoch>]],
            # Line 237
            [sstore, 11 <self.main_hash_justified>, 1],
            # Line 238
            [sstore,
              [add,
                [sha3_32,
                  [add,
                    [sha3_32, 10 <self.votes>],
                    [clamp, [mload, 96], [sub, [mload, 320 <epoch>], 1], [mload, 64]]]],
                2 <is_justified>],
              1],
            # Line 239
            [sstore,
              [add,
                [sha3_32,
                  [add,
                    [sha3_32, 10 <self.votes>],
                    [clamp, [mload, 96], [sub, [mload, 320 <epoch>], 1], [mload, 64]]]],
                1 <is_finalized>],
              1],
            # Line 240
            [sstore,
              17 <self.last_justified_epoch>,
              [clamp, [mload, 96], [sub, [mload, 320 <epoch>], 1], [mload, 64]]],
            # Line 241
            [sstore,
              16 <self.last_finalized_epoch>,
              [clamp, [mload, 96], [sub, [mload, 320 <epoch>], 1], [mload, 64]]],
            # Line 243
            [mstore, 352, 1],
            [mstore, 384, 1],
            [log3,
              352,
              64,
              47607052476070037250388038725579733243894556830711209046796940177296459501753,
              [clamp, [mload, 96], [sub, [mload, 320 <epoch>], 1], [mload, 64]],
              [sload,
                [add,
                  [sha3_32, 1 <self.checkpoint_hashes>],
                  [clamp, [mload, 96], [sub, [mload, 320 <epoch>], 1], [mload, 64]]]]],
            # Line 234
            stop]],
        # Line 247
        [if,
          [eq, [mload, 0], 3676565216 <sqrt_of_total_deposits>],
          [seq,
            [assert, [iszero, callvalue]],
            [assert, [eq, caller, address]],
            [mstore, 320, [sload, 15 <self.current_epoch>]],
            [mstore,
              352,
              [clamp,
                [mload, 96],
                [add,
                  [if,
                    [slt,
                      [clamp,
                        [mload, 160],
                        [sdiv,
                          [clamp,
                            [mload, 160],
                            [with,
                              r,
                              [sload,
                                [add,
                                  [sha3_32, 12 <self.deposit_scale_factor>],
                                  [clamp, [mload, 96], [sub, [mload, 320 <epoch>], 1], [mload, 64]]]],
                              [with,
                                l,
                                [with,
                                  _l,
                                  [sload, 7 <self.total_prevdyn_deposits>],
                                  [with,
                                    _r,
                                    [sload, 6 <self.total_curdyn_deposits>],
                                    [if, [slt, _l, _r], _r, _l]]],
                                [with,
                                  ans,
                                  [mul, l, r],
                                  [seq,
                                    [assert, [or, [eq, [sdiv, ans, l], r], [not, l]]],
                                    [sdiv, ans, 10000000000]]]]],
                            [mload, 128]],
                          1000000000000000000],
                        [mload, 128]],
                      0],
                    [sdiv,
                      [sub,
                        [clamp,
                          [mload, 160],
                          [sdiv,
                            [clamp,
                              [mload, 160],
                              [with,
                                r,
                                [sload,
                                  [add,
                                    [sha3_32, 12 <self.deposit_scale_factor>],
                                    [clamp, [mload, 96], [sub, [mload, 320 <epoch>], 1], [mload, 64]]]],
                                [with,
                                  l,
                                  [with,
                                    _l,
                                    [sload, 7 <self.total_prevdyn_deposits>],
                                    [with,
                                      _r,
                                      [sload, 6 <self.total_curdyn_deposits>],
                                      [if, [slt, _l, _r], _r, _l]]],
                                  [with,
                                    ans,
                                    [mul, l, r],
                                    [seq,
                                      [assert, [or, [eq, [sdiv, ans, l], r], [not, l]]],
                                      [sdiv, ans, 10000000000]]]]],
                              [mload, 128]],
                            1000000000000000000],
                          [mload, 128]],
                        9999999999],
                      10000000000],
                    [sdiv,
                      [clamp,
                        [mload, 160],
                        [sdiv,
                          [clamp,
                            [mload, 160],
                            [with,
                              r,
                              [sload,
                                [add,
                                  [sha3_32, 12 <self.deposit_scale_factor>],
                                  [clamp, [mload, 96], [sub, [mload, 320 <epoch>], 1], [mload, 64]]]],
                              [with,
                                l,
                                [with,
                                  _l,
                                  [sload, 7 <self.total_prevdyn_deposits>],
                                  [with,
                                    _r,
                                    [sload, 6 <self.total_curdyn_deposits>],
                                    [if, [slt, _l, _r], _r, _l]]],
                                [with,
                                  ans,
                                  [mul, l, r],
                                  [seq,
                                    [assert, [or, [eq, [sdiv, ans, l], r], [not, l]]],
                                    [sdiv, ans, 10000000000]]]]],
                            [mload, 128]],
                          1000000000000000000],
                        [mload, 128]],
                      10000000000]],
                  1],
                [mload, 64]]],
            [mstore,
              384,
              [clamp,
                [mload, 160],
                [sdiv,
                  [mul, [mload, 352 <ether_deposited_as_number>], 100000000000000000000],
                  20000000000],
                [mload, 128]]],
            # Line 253
            [repeat,
              416,
              0,
              20,
              [seq,
                [mstore,
                  384 <sqrt>,
                  [clamp,
                    [mload, 160],
                    [sdiv,
                      [clamp,
                        [mload, 160],
                        [add,
                          [mload, 384 <sqrt>],
                          [clamp,
                            [mload, 160],
                            [sdiv,
                              [mul, [mload, 352 <ether_deposited_as_number>], 100000000000000000000],
                              [clamp_nonzero, [mload, 384 <sqrt>]]],
                            [mload, 128]]],
                        [mload, 128]],
                      2],
                    [mload, 128]]]]],
            # Line 255
            [mstore, 0, [mload, 384 <sqrt>]],
            [return, 0, 32],
            # Line 247
            stop]],
        # Line 261
        [if,
          [eq, [mload, 0], 1573911575 <initialize_epoch>],
          [seq,
            [calldatacopy, 320, 4, 32],
            [assert, [iszero, callvalue]],
            /* checking int128 input */
            [clamp,
              [mload, 96],
              [calldataload, 4],
              [mload, 64]],
            [mstore,
              352,
              [if,
                # Line 264
                [slt,
                  [clamp,
                    [mload, 160],
                    [sdiv,
                      [mul, number, 10000000000],
                      [clamp_nonzero, [sload, 21 <self.EPOCH_LENGTH>]]],
                    [mload, 128]],
                  0],
                [sdiv,
                  [sub,
                    [clamp,
                      [mload, 160],
                      [sdiv,
                        [mul, number, 10000000000],
                        [clamp_nonzero, [sload, 21 <self.EPOCH_LENGTH>]]],
                      [mload, 128]],
                    9999999999],
                  10000000000],
                [sdiv,
                  [clamp,
                    [mload, 160],
                    [sdiv,
                      [mul, number, 10000000000],
                      [clamp_nonzero, [sload, 21 <self.EPOCH_LENGTH>]]],
                    [mload, 128]],
                  10000000000]]],
            # Line 265
            [assert,
              [and,
                [sle, [mload, 320 <epoch>], [mload, 352 <computed_current_epoch>]],
                [eq,
                  [mload, 320 <epoch>],
                  [clamp, [mload, 96], [add, [sload, 15 <self.current_epoch>], 1], [mload, 64]]]]],
            # Line 268
            [sstore, 15 <self.current_epoch>, [mload, 320 <epoch>]],
            # Line 270
            [sstore,
              14 <self.last_voter_rescale>,
              [clamp,
                [mload, 160],
                [add,
                  10000000000,
                  [mload,
                    /* Internal Call: collective_reward */
                    [seq,
                      [assert, [call, gas, address, 0, [seq, [mstore, 384, 2898663875], 412], 4, 480, 32]],
                      480]]],
                [mload, 128]]],
            # Line 271
            [sstore,
              13 <self.last_nonvoter_rescale>,
              [clamp,
                [mload, 160],
                [with,
                  l,
                  [sload, 14 <self.last_voter_rescale>],
                  [with,
                    r,
                    [clamp_nonzero,
                      [clamp,
                        [mload, 160],
                        [add, 10000000000, [sload, 18 <self.reward_factor>]],
                        [mload, 128]]],
                    [sdiv, [mul, l, 10000000000], r]]],
                [mload, 128]]],
            # Line 272
            [sstore,
              [add, [sha3_32, 12 <self.deposit_scale_factor>], [mload, 320 <epoch>]],
              [clamp,
                [mload, 160],
                [with,
                  r,
                  [sload, 13 <self.last_nonvoter_rescale>],
                  [with,
                    l,
                    [sload,
                      [add,
                        [sha3_32, 12 <self.deposit_scale_factor>],
                        [clamp, [mload, 96], [sub, [mload, 320 <epoch>], 1], [mload, 64]]]],
                    [with,
                      ans,
                      [mul, l, r],
                      [seq,
                        [assert, [or, [eq, [sdiv, ans, l], r], [not, l]]],
                        [sdiv, ans, 10000000000]]]]],
                [mload, 128]]],
            # Line 274
            [if,
              [mload,
                /* Internal Call: deposit_exists */
                [seq,
                  [assert, [call, gas, address, 0, [seq, [mstore, 608, 3732904309], 636], 4, 704, 32]],
                  704]],
              # Line 276
              [seq,
                [mstore,
                  736,
                  [clamp,
                    [mload, 160],
                    [with,
                      l,
                      [sload, 27 <self.BASE_INTEREST_FACTOR>],
                      [with,
                        r,
                        [clamp_nonzero,
                          [mload,
                            /* Internal Call: sqrt_of_total_deposits */
                            [seq,
                              [assert, [call, gas, address, 0, [seq, [mstore, 768, 3676565216], 796], 4, 864, 32]],
                              864]]],
                        [sdiv, [mul, l, 10000000000], r]]],
                    [mload, 128]]],
                # Line 277
                [sstore,
                  18 <self.reward_factor>,
                  [clamp,
                    [mload, 160],
                    [add,
                      [mload, 736 <adj_interest_base>],
                      [clamp,
                        [mload, 160],
                        [with,
                          r,
                          [clamp,
                            [mload, 96],
                            [sub,
                              [mload,
                                /* Internal Call: esf */
                                [seq,
                                  [assert, [call, gas, address, 0, [seq, [mstore, 896, 2593057911], 924], 4, 992, 32]],
                                  992]],
                              2],
                            [mload, 64]],
                          [with,
                            l,
                            [sload, 28 <self.BASE_PENALTY_FACTOR>],
                            [with,
                              ans,
                              [mul, l, r],
                              [seq, [assert, [or, [eq, [sdiv, ans, l], r], [not, l]]], ans]]]],
                        [mload, 128]]],
                    [mload, 128]]],
                # Line 279
                [assert, [sgt, [sload, 18 <self.reward_factor>], 0]]],
              # Line 282
              [seq,
                /* Internal Call: insta_finalize */ [assert, [call, gas, address, 0, [seq, [mstore, 512, 1697049970], 540], 4, 0, 0]],
                # Line 283
                [sstore, 18 <self.reward_factor>, 0]]],
            # Line 286
            /* Internal Call: increment_dynasty */ [assert, [call, gas, address, 0, [seq, [mstore, 1024, 3532045186], 1052], 4, 0, 0]],
            # Line 289
            [sstore,
              [add, [sha3_32, 1 <self.checkpoint_hashes>], [mload, 320 <epoch>]],
              [mload,
                /* Internal Call: recommended_target_hash */
                [seq,
                  [assert, [call, gas, address, 0, [seq, [mstore, 1120, 2237609772], 1148], 4, 1216, 32]],
                  1216]]],
            # Line 291
            [mstore, 1248, 0],
            [mstore, 1280, 0],
            [log3,
              1248,
              64,
              47607052476070037250388038725579733243894556830711209046796940177296459501753,
              [mload, 320 <epoch>],
              [sload, [add, [sha3_32, 1 <self.checkpoint_hashes>], [mload, 320 <epoch>]]]],
            # Line 261
            stop]],
        # Line 294
        [if,
          [eq, [mload, 0], 4183858952 <deposit>],
          [seq,
            [calldatacopy, 320, 4, 64],
            /* checking address input */ [uclamplt, [calldataload, 4], [mload, 32]],
            /* checking address input */ [uclamplt, [calldataload, 36], [mload, 32]],
            # Line 297
            [assert,
              [eq,
                [sload, 15 <self.current_epoch>],
                [if,
                  [slt,
                    [clamp,
                      [mload, 160],
                      [sdiv,
                        [mul, number, 10000000000],
                        [clamp_nonzero, [sload, 21 <self.EPOCH_LENGTH>]]],
                      [mload, 128]],
                    0],
                  [sdiv,
                    [sub,
                      [clamp,
                        [mload, 160],
                        [sdiv,
                          [mul, number, 10000000000],
                          [clamp_nonzero, [sload, 21 <self.EPOCH_LENGTH>]]],
                        [mload, 128]],
                      9999999999],
                    10000000000],
                  [sdiv,
                    [clamp,
                      [mload, 160],
                      [sdiv,
                        [mul, number, 10000000000],
                        [clamp_nonzero, [sload, 21 <self.EPOCH_LENGTH>]]],
                      [mload, 128]],
                    10000000000]]]],
            # Line 298
            [assert,
              [ne,
                /* extracting 32 bytes */
                [with,
                  _sub,
                  [seq,
                    [with,
                      _source,
                      /* concat */
                      [with,
                        _poz,
                        0,
                        [seq,
                          [with,
                            _arg,
                            /* Create ByteArray: b'\xa1\x90>\xab' */
                            [seq,
                              [mstore, 384, 4],
                              [mstore,
                                416,
                                73077227117658356969279410473650150870559631135483570926313946830681982107648],
                              384],
                            [seq,
                              /* copy byte slice */
                              [with,
                                _l,
                                4,
                                [pop, [call, 18, 4, 0, [add, _arg, 32], _l, [add, [add, 480, _poz], 32], _l]]],
                              [set, _poz, [add, _poz, [mload, _arg]]]]],
                          [mstore, [add, [add, 480, _poz], 32], [mload, 320 <validation_addr>]],
                          [set, _poz, [add, _poz, 32]],
                          [mstore, 480, _poz],
                          480]],
                      [with,
                        _sz,
                        [add, 32, [mload, _source]],
                        [assert, [call, [add, 18, [div, _sz, 10]], 4, 0, _source, _sz, 608, _sz]]]],
                    [assert,
                      [call,
                        500000,
                        [sload, 26 <self.PURITY_CHECKER>],
                        0,
                        640,
                        [mload, 608],
                        768,
                        32]],
                    [mstore, 736, 32],
                    736],
                  [mload,
                    [add,
                      _sub,
                      [add, 32, [mul, 32, [div, [clample, 0, [sub, [mload, _sub], 32]], 32]]]]]],
                0]],
            # Line 299
            [assert, [iszero, [sload, [add, [sha3_32, 3 <self.validator_indexes>], [mload, 352 <withdrawal_addr>]]]]],
            # Line 300
            [assert, [sge, callvalue, [sload, 29 <self.MIN_DEPOSIT_SIZE>]]],
            # Line 294
            [mstore,
              832,
              [clamp, [mload, 96], [add, [sload, 4 <self.dynasty>], 2], [mload, 64]]],
            [mstore,
              864,
              [clamp,
                [mload, 160],
                [sdiv,
                  [mul, callvalue, 100000000000000000000],
                  [clamp_nonzero,
                    [sload,
                      [add,
                        [sha3_32, 12 <self.deposit_scale_factor>],
                        [sload, 15 <self.current_epoch>]]]]],
                [mload, 128]]],
            # Line 303
            [with,
              _L,
              [sha3_32, [add, [sha3_32, 0 <self.validators>], [sload, 2 <self.next_validator_index>]]],
              [seq,
                [sstore, _L, [mload, 320 <validation_addr>]],
                [sstore, [add, _L, 1 <deposit>], [mload, 864 <scaled_deposit>]],
                [sstore, [add, _L, 2 <end_dynasty>], [sload, 30 <self.DEFAULT_END_DYNASTY>]],
                [sstore, [add, _L, 3 <start_dynasty>], [mload, 832 <start_dynasty>]],
                [sstore, [add, _L, 4 <withdrawal_addr>], [mload, 352 <withdrawal_addr>]]]],
            # Line 310
            [sstore,
              [add, [sha3_32, 3 <self.validator_indexes>], [mload, 352 <withdrawal_addr>]],
              [sload, 2 <self.next_validator_index>]],
            # Line 311
            [with,
              _stloc,
              2 <self.next_validator_index>,
              [sstore, _stloc, [clamp, [mload, 96], [add, [sload, _stloc], 1], [mload, 64]]]],
            # Line 312
            [with,
              _stloc,
              [add, [sha3_32, 5 <self.dynasty_wei_delta>], [mload, 832 <start_dynasty>]],
              [sstore,
                _stloc,
                [clamp,
                  [mload, 160],
                  [add, [sload, _stloc], [mload, 864 <scaled_deposit>]],
                  [mload, 128]]]],
            # Line 314
            [mstore, 896, [mload, 320 <validation_addr>]],
            [mstore,
              928,
              [sload,
                [add,
                  [sha3_32,
                    [add,
                      [sha3_32, 0 <self.validators>],
                      [sload, [add, [sha3_32, 3 <self.validator_indexes>], [mload, 352 <withdrawal_addr>]]]]],
                  3 <start_dynasty>]]],
            [mstore, 960, callvalue],
            [log3,
              896,
              96,
              90949975742088645118838927626811719332981332970196685580485995401136711114977,
              [mload, 352 <withdrawal_addr>],
              [sload, [add, [sha3_32, 3 <self.validator_indexes>], [mload, 352 <withdrawal_addr>]]]],
            # Line 294
            stop]],
        # Line 317
        [if,
          [eq, [mload, 0], 38117084 <logout>],
          [seq,
            [calldatacopy, 320, 4, 64],
            [assert, [iszero, callvalue]],
            /* checking int128 input */
            [clamp,
              [mload, 96],
              [calldataload, 4],
              [mload, 64]],
            /* checking int128 input */
            [clamp,
              [mload, 96],
              [calldataload, 36],
              [mload, 64]],
            # Line 319
            [assert,
              [eq,
                [sload, 15 <self.current_epoch>],
                [if,
                  [slt,
                    [clamp,
                      [mload, 160],
                      [sdiv,
                        [mul, number, 10000000000],
                        [clamp_nonzero, [sload, 21 <self.EPOCH_LENGTH>]]],
                      [mload, 128]],
                    0],
                  [sdiv,
                    [sub,
                      [clamp,
                        [mload, 160],
                        [sdiv,
                          [mul, number, 10000000000],
                          [clamp_nonzero, [sload, 21 <self.EPOCH_LENGTH>]]],
                        [mload, 128]],
                      9999999999],
                    10000000000],
                  [sdiv,
                    [clamp,
                      [mload, 160],
                      [sdiv,
                        [mul, number, 10000000000],
                        [clamp_nonzero, [sload, 21 <self.EPOCH_LENGTH>]]],
                      [mload, 128]],
                    10000000000]]]],
            # Line 328
            [assert, [sge, [sload, 15 <self.current_epoch>], [mload, 352 <epoch>]]],
            # Line 317
            [mstore,
              384,
              [clamp,
                [mload, 96],
                [add, [sload, 4 <self.dynasty>], [sload, 23 <self.DYNASTY_LOGOUT_DELAY>]],
                [mload, 64]]],
            # Line 333
            [assert,
              [sgt,
                [sload,
                  [add,
                    [sha3_32, [add, [sha3_32, 0 <self.validators>], [mload, 320 <validator_index>]]],
                    2 <end_dynasty>]],
                [mload, 384 <end_dynasty>]]],
            # Line 335
            [sstore,
              [add,
                [sha3_32, [add, [sha3_32, 0 <self.validators>], [mload, 320 <validator_index>]]],
                2 <end_dynasty>],
              [mload, 384 <end_dynasty>]],
            # Line 336
            [with,
              _stloc,
              [add, [sha3_32, 5 <self.dynasty_wei_delta>], [mload, 384 <end_dynasty>]],
              [sstore,
                _stloc,
                [clamp,
                  [mload, 160],
                  [sub,
                    [sload, _stloc],
                    [sload,
                      [add,
                        [sha3_32, [add, [sha3_32, 0 <self.validators>], [mload, 320 <validator_index>]]],
                        1 <deposit>]]],
                  [mload, 128]]]],
            # Line 338
            [mstore,
              416,
              [sload,
                [add,
                  [sha3_32, [add, [sha3_32, 0 <self.validators>], [mload, 320 <validator_index>]]],
                  2 <end_dynasty>]]],
            [log3,
              416,
              32,
              79992322569564756438802956933278762037139331561819380271719625643188950772399,
              [sload,
                [add,
                  [sha3_32, [add, [sha3_32, 0 <self.validators>], [mload, 320 <validator_index>]]],
                  4 <withdrawal_addr>]],
              [mload, 320 <validator_index>]],
            # Line 317
            stop]],
        # Line 342
        [if,
          [eq, [mload, 0], 28815128 <delete_validator>],
          [seq,
            [calldatacopy, 320, 4, 32],
            [assert, [iszero, callvalue]],
            [assert, [eq, caller, address]],
            /* checking int128 input */
            [clamp,
              [mload, 96],
              [calldataload, 4],
              [mload, 64]],
            # Line 344
            [sstore,
              [add,
                [sha3_32, 3 <self.validator_indexes>],
                [sload,
                  [add,
                    [sha3_32, [add, [sha3_32, 0 <self.validators>], [mload, 320 <validator_index>]]],
                    4 <withdrawal_addr>]]],
              0],
            # Line 345
            [with,
              _L,
              [sha3_32, [add, [sha3_32, 0 <self.validators>], [mload, 320 <validator_index>]]],
              [seq,
                [sstore, _L, 0],
                [sstore, [add, _L, 1 <deposit>], 0],
                [sstore, [add, _L, 2 <end_dynasty>], 0],
                [sstore, [add, _L, 3 <start_dynasty>], 0],
                [sstore, [add, _L, 4 <withdrawal_addr>], 0]]],
            # Line 342
            stop]],
        # Line 355
        [if,
          [eq, [mload, 0], 3991540864 <withdraw>],
          [seq,
            [calldatacopy, 320, 4, 32],
            [assert, [iszero, callvalue]],
            /* checking int128 input */
            [clamp,
              [mload, 96],
              [calldataload, 4],
              [mload, 64]],
            # Line 358
            [assert,
              [sge,
                [sload, 4 <self.dynasty>],
                [clamp,
                  [mload, 96],
                  [add,
                    [sload,
                      [add,
                        [sha3_32, [add, [sha3_32, 0 <self.validators>], [mload, 320 <validator_index>]]],
                        2 <end_dynasty>]],
                    1],
                  [mload, 64]]]],
            # Line 355
            [mstore,
              352,
              [sload,
                [add,
                  [sha3_32, 8 <self.dynasty_start_epoch>],
                  [clamp,
                    [mload, 96],
                    [add,
                      [sload,
                        [add,
                          [sha3_32, [add, [sha3_32, 0 <self.validators>], [mload, 320 <validator_index>]]],
                          2 <end_dynasty>]],
                      1],
                    [mload, 64]]]]],
            # Line 360
            [assert,
              [sge,
                [sload, 15 <self.current_epoch>],
                [clamp,
                  [mload, 96],
                  [add, [mload, 352 <end_epoch>], [sload, 22 <self.WITHDRAWAL_DELAY>]],
                  [mload, 64]]]],
            # Line 355
            [mstore,
              384,
              [if,
                # Line 362
                [slt,
                  [clamp,
                    [mload, 160],
                    [with,
                      r,
                      [sload, [add, [sha3_32, 12 <self.deposit_scale_factor>], [mload, 352 <end_epoch>]]],
                      [with,
                        l,
                        [sload,
                          [add,
                            [sha3_32, [add, [sha3_32, 0 <self.validators>], [mload, 320 <validator_index>]]],
                            1 <deposit>]],
                        [with,
                          ans,
                          [mul, l, r],
                          [seq,
                            [assert, [or, [eq, [sdiv, ans, l], r], [not, l]]],
                            [sdiv, ans, 10000000000]]]]],
                    [mload, 128]],
                  0],
                [sdiv,
                  [sub,
                    [clamp,
                      [mload, 160],
                      [with,
                        r,
                        [sload, [add, [sha3_32, 12 <self.deposit_scale_factor>], [mload, 352 <end_epoch>]]],
                        [with,
                          l,
                          [sload,
                            [add,
                              [sha3_32, [add, [sha3_32, 0 <self.validators>], [mload, 320 <validator_index>]]],
                              1 <deposit>]],
                          [with,
                            ans,
                            [mul, l, r],
                            [seq,
                              [assert, [or, [eq, [sdiv, ans, l], r], [not, l]]],
                              [sdiv, ans, 10000000000]]]]],
                      [mload, 128]],
                    9999999999],
                  10000000000],
                [sdiv,
                  [clamp,
                    [mload, 160],
                    [with,
                      r,
                      [sload, [add, [sha3_32, 12 <self.deposit_scale_factor>], [mload, 352 <end_epoch>]]],
                      [with,
                        l,
                        [sload,
                          [add,
                            [sha3_32, [add, [sha3_32, 0 <self.validators>], [mload, 320 <validator_index>]]],
                            1 <deposit>]],
                        [with,
                          ans,
                          [mul, l, r],
                          [seq,
                            [assert, [or, [eq, [sdiv, ans, l], r], [not, l]]],
                            [sdiv, ans, 10000000000]]]]],
                    [mload, 128]],
                  10000000000]]],
            # Line 363
            [assert,
              [call,
                0,
                [sload,
                  [add,
                    [sha3_32, [add, [sha3_32, 0 <self.validators>], [mload, 320 <validator_index>]]],
                    4 <withdrawal_addr>]],
                [mload, 384 <withdraw_amount>],
                0,
                0,
                0,
                0]],
            # Line 365
            [mstore, 416, [mload, 384 <withdraw_amount>]],
            [log3,
              416,
              32,
              33293802015154410171544671299146599957819108364514727449747913441386833120839,
              [sload,
                [add,
                  [sha3_32, [add, [sha3_32, 0 <self.validators>], [mload, 320 <validator_index>]]],
                  4 <withdrawal_addr>]],
              [mload, 320 <validator_index>]],
            # Line 366
            /* Internal Call: delete_validator */
            [assert,
              [call,
                gas,
                address,
                0,
                [seq,
                  [mstore, 448, 28815128],
                  [mstore, 480, [mload, 320 <validator_index>]],
                  476],
                36,
                0,
                0]],
            # Line 355
            stop]],
        # Line 370
        [if,
          [eq, [mload, 0], 1470052530 <proc_reward>],
          [seq,
            [calldatacopy, 320, 4, 64],
            [assert, [iszero, callvalue]],
            [assert, [eq, caller, address]],
            /* checking int128 input */
            [clamp,
              [mload, 96],
              [calldataload, 4],
              [mload, 64]],
            /* checking int128 input */
            [clamp,
              [mload, 96],
              [calldataload, 36],
              [mload, 64]],
            # Line 373
            [with,
              _stloc,
              [add,
                [sha3_32, [add, [sha3_32, 0 <self.validators>], [mload, 320 <validator_index>]]],
                1 <deposit>],
              [sstore,
                _stloc,
                [clamp,
                  [mload, 160],
                  [add, [sload, _stloc], [mul, [mload, 352 <reward>], 10000000000]],
                  [mload, 128]]]],
            # Line 370
            [mstore,
              384,
              [sload,
                [add,
                  [sha3_32, [add, [sha3_32, 0 <self.validators>], [mload, 320 <validator_index>]]],
                  3 <start_dynasty>]]],
            [mstore,
              416,
              [sload,
                [add,
                  [sha3_32, [add, [sha3_32, 0 <self.validators>], [mload, 320 <validator_index>]]],
                  2 <end_dynasty>]]],
            [mstore, 448, [sload, 4 <self.dynasty>]],
            [mstore,
              480,
              [clamp, [mload, 96], [sub, [mload, 448 <current_dynasty>], 1], [mload, 64]]],
            # Line 378
            [if,
              [and,
                [sle, [mload, 384 <start_dynasty>], [mload, 448 <current_dynasty>]],
                [slt, [mload, 448 <current_dynasty>], [mload, 416 <end_dynasty>]]],
              # Line 379
              [seq,
                [with,
                  _stloc,
                  6 <self.total_curdyn_deposits>,
                  [sstore,
                    _stloc,
                    [clamp,
                      [mload, 160],
                      [add, [sload, _stloc], [mul, [mload, 352 <reward>], 10000000000]],
                      [mload, 128]]]]]],
            # Line 380
            [if,
              [and,
                [sle, [mload, 384 <start_dynasty>], [mload, 480 <past_dynasty>]],
                [slt, [mload, 480 <past_dynasty>], [mload, 416 <end_dynasty>]]],
              # Line 381
              [seq,
                [with,
                  _stloc,
                  7 <self.total_prevdyn_deposits>,
                  [sstore,
                    _stloc,
                    [clamp,
                      [mload, 160],
                      [add, [sload, _stloc], [mul, [mload, 352 <reward>], 10000000000]],
                      [mload, 128]]]]]],
            # Line 382
            [if,
              [slt, [mload, 416 <end_dynasty>], [sload, 30 <self.DEFAULT_END_DYNASTY>]],
              # Line 383
              [seq,
                [with,
                  _stloc,
                  [add, [sha3_32, 5 <self.dynasty_wei_delta>], [mload, 416 <end_dynasty>]],
                  [sstore,
                    _stloc,
                    [clamp,
                      [mload, 160],
                      [sub, [sload, _stloc], [mul, [mload, 352 <reward>], 10000000000]],
                      [mload, 128]]]]]],
            # Line 385
            [assert,
              [call,
                0,
                coinbase,
                [if,
                  [slt,
                    [clamp,
                      [mload, 160],
                      [sdiv,
                        [clamp,
                          [mload, 160],
                          [with,
                            r,
                            [sload,
                              [add,
                                [sha3_32, 12 <self.deposit_scale_factor>],
                                [sload, 15 <self.current_epoch>]]],
                            [with,
                              l,
                              [mload, 352 <reward>],
                              [with,
                                ans,
                                [mul, l, r],
                                [seq, [assert, [or, [eq, [sdiv, ans, l], r], [not, l]]], ans]]]],
                          [mload, 128]],
                        8],
                      [mload, 128]],
                    0],
                  [sdiv,
                    [sub,
                      [clamp,
                        [mload, 160],
                        [sdiv,
                          [clamp,
                            [mload, 160],
                            [with,
                              r,
                              [sload,
                                [add,
                                  [sha3_32, 12 <self.deposit_scale_factor>],
                                  [sload, 15 <self.current_epoch>]]],
                              [with,
                                l,
                                [mload, 352 <reward>],
                                [with,
                                  ans,
                                  [mul, l, r],
                                  [seq, [assert, [or, [eq, [sdiv, ans, l], r], [not, l]]], ans]]]],
                            [mload, 128]],
                          8],
                        [mload, 128]],
                      9999999999],
                    10000000000],
                  [sdiv,
                    [clamp,
                      [mload, 160],
                      [sdiv,
                        [clamp,
                          [mload, 160],
                          [with,
                            r,
                            [sload,
                              [add,
                                [sha3_32, 12 <self.deposit_scale_factor>],
                                [sload, 15 <self.current_epoch>]]],
                            [with,
                              l,
                              [mload, 352 <reward>],
                              [with,
                                ans,
                                [mul, l, r],
                                [seq, [assert, [or, [eq, [sdiv, ans, l], r], [not, l]]], ans]]]],
                          [mload, 128]],
                        8],
                      [mload, 128]],
                    10000000000]],
                0,
                0,
                0,
                0]],
            # Line 370
            stop]],
        # Line 389
        [if,
          [eq, [mload, 0], 3635640109 <vote>],
          [seq,
            [calldatacopy, 320, 4, 128],
            [assert, [iszero, callvalue]],
            /* checking int128 input */
            [clamp,
              [mload, 96],
              [calldataload, 4],
              [mload, 64]],
            /* checking int128 input */
            [clamp,
              [mload, 96],
              [calldataload, 68],
              [mload, 64]],
            /* checking int128 input */
            [clamp,
              [mload, 96],
              [calldataload, 100],
              [mload, 64]],
            # Line 406
            [assert,
              [iszero,
                [and,
                  [sload,
                    [add,
                      [sha3_32,
                        [add,
                          [sha3_32, [add, [sha3_32, 10 <self.votes>], [mload, 384 <target_epoch>]]],
                          4 <vote_bitmap>]],
                      [if,
                        # Line 406
                        [slt,
                          [clamp,
                            [mload, 160],
                            [sdiv, [mul, [mload, 320 <validator_index>], 10000000000], 256],
                            [mload, 128]],
                          0],
                        [sdiv,
                          [sub,
                            [clamp,
                              [mload, 160],
                              [sdiv, [mul, [mload, 320 <validator_index>], 10000000000], 256],
                              [mload, 128]],
                            9999999999],
                          10000000000],
                        [sdiv,
                          [clamp,
                            [mload, 160],
                            [sdiv, [mul, [mload, 320 <validator_index>], 10000000000], 256],
                            [mload, 128]],
                          10000000000]]]],
                  [with,
                    _v,
                    1,
                    [with,
                      _s,
                      [clamp, [mload, 96], [smod, [mload, 320 <validator_index>], 256], [mload, 64]],
                      [if, [sle, _s, 0], [div, _v, [exp, 2, [sub, 0, _s]]], [mul, _v, [exp, 2, _s]]]]]]]],
            # Line 409
            [assert,
              [eq,
                [mload, 352 <target_hash>],
                [mload,
                  /* Internal Call: recommended_target_hash */
                  [seq,
                    [assert, [call, gas, address, 0, [seq, [mstore, 448, 2237609772], 476], 4, 544, 32]],
                    544]]]],
            # Line 410
            [assert, [eq, [mload, 384 <target_epoch>], [sload, 15 <self.current_epoch>]]],
            # Line 412
            [assert,
              [sload,
                [add,
                  [sha3_32, [add, [sha3_32, 10 <self.votes>], [mload, 416 <source_epoch>]]],
                  2 <is_justified>]]],
            # Line 389
            [mstore,
              576,
              [sload,
                [add,
                  [sha3_32, [add, [sha3_32, 0 <self.validators>], [mload, 320 <validator_index>]]],
                  3 <start_dynasty>]]],
            [mstore,
              608,
              [sload,
                [add,
                  [sha3_32, [add, [sha3_32, 0 <self.validators>], [mload, 320 <validator_index>]]],
                  2 <end_dynasty>]]],
            [mstore, 640, [sload, 4 <self.dynasty>]],
            [mstore,
              672,
              [clamp, [mload, 96], [sub, [mload, 640 <current_dynasty>], 1], [mload, 64]]],
            [mstore,
              704,
              [and,
                [sle, [mload, 576 <start_dynasty>], [mload, 640 <current_dynasty>]],
                [slt, [mload, 640 <current_dynasty>], [mload, 608 <end_dynasty>]]]],
            [mstore,
              736,
              [and,
                [sle, [mload, 576 <start_dynasty>], [mload, 672 <past_dynasty>]],
                [slt, [mload, 672 <past_dynasty>], [mload, 608 <end_dynasty>]]]],
            # Line 421
            [assert, [or, [mload, 704 <in_current_dynasty>], [mload, 736 <in_prev_dynasty>]]],
            # Line 424
            [sstore,
              [add,
                [sha3_32,
                  [add,
                    [sha3_32, [add, [sha3_32, 10 <self.votes>], [mload, 384 <target_epoch>]]],
                    4 <vote_bitmap>]],
                [if,
                  # Line 424
                  [slt,
                    [clamp,
                      [mload, 160],
                      [sdiv, [mul, [mload, 320 <validator_index>], 10000000000], 256],
                      [mload, 128]],
                    0],
                  [sdiv,
                    [sub,
                      [clamp,
                        [mload, 160],
                        [sdiv, [mul, [mload, 320 <validator_index>], 10000000000], 256],
                        [mload, 128]],
                      9999999999],
                    10000000000],
                  [sdiv,
                    [clamp,
                      [mload, 160],
                      [sdiv, [mul, [mload, 320 <validator_index>], 10000000000], 256],
                      [mload, 128]],
                    10000000000]]],
              [or,
                [sload,
                  [add,
                    [sha3_32,
                      [add,
                        [sha3_32, [add, [sha3_32, 10 <self.votes>], [mload, 384 <target_epoch>]]],
                        4 <vote_bitmap>]],
                    [if,
                      # Line 425
                      [slt,
                        [clamp,
                          [mload, 160],
                          [sdiv, [mul, [mload, 320 <validator_index>], 10000000000], 256],
                          [mload, 128]],
                        0],
                      [sdiv,
                        [sub,
                          [clamp,
                            [mload, 160],
                            [sdiv, [mul, [mload, 320 <validator_index>], 10000000000], 256],
                            [mload, 128]],
                          9999999999],
                        10000000000],
                      [sdiv,
                        [clamp,
                          [mload, 160],
                          [sdiv, [mul, [mload, 320 <validator_index>], 10000000000], 256],
                          [mload, 128]],
                        10000000000]]]],
                [with,
                  _v,
                  1,
                  [with,
                    _s,
                    [clamp, [mload, 96], [smod, [mload, 320 <validator_index>], 256], [mload, 64]],
                    [if, [sle, _s, 0], [div, _v, [exp, 2, [sub, 0, _s]]], [mul, _v, [exp, 2, _s]]]]]]],
            # Line 389
            [mstore,
              768,
              [sload,
                [add,
                  [sha3_32, [sha3_32, [add, [sha3_32, 10 <self.votes>], [mload, 384 <target_epoch>]]]],
                  [mload, 416 <source_epoch>]]]],
            [mstore,
              800,
              [sload,
                [add,
                  [sha3_32,
                    [add,
                      [sha3_32, [add, [sha3_32, 10 <self.votes>], [mload, 384 <target_epoch>]]],
                      3 <prev_dyn_votes>]],
                  [mload, 416 <source_epoch>]]]],
            # Line 431
            [if,
              [mload, 704 <in_current_dynasty>],
              # Line 432
              [seq,
                [with,
                  _mloc,
                  768 <current_dynasty_votes>,
                  [mstore,
                    _mloc,
                    [clamp,
                      [mload, 160],
                      [add,
                        [mload, _mloc],
                        [sload,
                          [add,
                            [sha3_32, [add, [sha3_32, 0 <self.validators>], [mload, 320 <validator_index>]]],
                            1 <deposit>]]],
                      [mload, 128]]]],
                # Line 433
                [sstore,
                  [add,
                    [sha3_32, [sha3_32, [add, [sha3_32, 10 <self.votes>], [mload, 384 <target_epoch>]]]],
                    [mload, 416 <source_epoch>]],
                  [mload, 768 <current_dynasty_votes>]]]],
            # Line 434
            [if,
              [mload, 736 <in_prev_dynasty>],
              # Line 435
              [seq,
                [with,
                  _mloc,
                  800 <previous_dynasty_votes>,
                  [mstore,
                    _mloc,
                    [clamp,
                      [mload, 160],
                      [add,
                        [mload, _mloc],
                        [sload,
                          [add,
                            [sha3_32, [add, [sha3_32, 0 <self.validators>], [mload, 320 <validator_index>]]],
                            1 <deposit>]]],
                      [mload, 128]]]],
                # Line 436
                [sstore,
                  [add,
                    [sha3_32,
                      [add,
                        [sha3_32, [add, [sha3_32, 10 <self.votes>], [mload, 384 <target_epoch>]]],
                        3 <prev_dyn_votes>]],
                    [mload, 416 <source_epoch>]],
                  [mload, 800 <previous_dynasty_votes>]]]],
            # Line 440
            [if,
              [eq, [sload, 19 <self.expected_source_epoch>], [mload, 416 <source_epoch>]],
              # Line 441
              [seq,
                [mstore,
                  832,
                  [if,
                    # Line 441
                    [slt,
                      [clamp,
                        [mload, 160],
                        [with,
                          r,
                          [sload, 18 <self.reward_factor>],
                          [with,
                            l,
                            [sload,
                              [add,
                                [sha3_32, [add, [sha3_32, 0 <self.validators>], [mload, 320 <validator_index>]]],
                                1 <deposit>]],
                            [with,
                              ans,
                              [mul, l, r],
                              [seq,
                                [assert, [or, [eq, [sdiv, ans, l], r], [not, l]]],
                                [sdiv, ans, 10000000000]]]]],
                        [mload, 128]],
                      0],
                    [sdiv,
                      [sub,
                        [clamp,
                          [mload, 160],
                          [with,
                            r,
                            [sload, 18 <self.reward_factor>],
                            [with,
                              l,
                              [sload,
                                [add,
                                  [sha3_32, [add, [sha3_32, 0 <self.validators>], [mload, 320 <validator_index>]]],
                                  1 <deposit>]],
                              [with,
                                ans,
                                [mul, l, r],
                                [seq,
                                  [assert, [or, [eq, [sdiv, ans, l], r], [not, l]]],
                                  [sdiv, ans, 10000000000]]]]],
                          [mload, 128]],
                        9999999999],
                      10000000000],
                    [sdiv,
                      [clamp,
                        [mload, 160],
                        [with,
                          r,
                          [sload, 18 <self.reward_factor>],
                          [with,
                            l,
                            [sload,
                              [add,
                                [sha3_32, [add, [sha3_32, 0 <self.validators>], [mload, 320 <validator_index>]]],
                                1 <deposit>]],
                            [with,
                              ans,
                              [mul, l, r],
                              [seq,
                                [assert, [or, [eq, [sdiv, ans, l], r], [not, l]]],
                                [sdiv, ans, 10000000000]]]]],
                        [mload, 128]],
                      10000000000]]],
                # Line 442
                /* Internal Call: proc_reward */
                [assert,
                  [call,
                    gas,
                    address,
                    0,
                    [seq,
                      [mstore, 864, 1470052530],
                      [mstore, 896, [mload, 320 <validator_index>]],
                      [mstore, 928, [mload, 832 <reward>]],
                      892],
                    68,
                    0,
                    0]]]],
            # Line 446
            [if,
              [and,
                [and,
                  [sge,
                    [mload, 768 <current_dynasty_votes>],
                    [clamp,
                      [mload, 160],
                      [sdiv,
                        [clamp,
                          [mload, 160],
                          [with,
                            r,
                            2,
                            [with,
                              l,
                              [sload, 6 <self.total_curdyn_deposits>],
                              [with,
                                ans,
                                [mul, l, r],
                                [seq, [assert, [or, [eq, [sdiv, ans, l], r], [not, l]]], ans]]]],
                          [mload, 128]],
                        3],
                      [mload, 128]]],
                  [sge,
                    [mload, 800 <previous_dynasty_votes>],
                    [clamp,
                      [mload, 160],
                      [sdiv,
                        [clamp,
                          [mload, 160],
                          [with,
                            r,
                            2,
                            [with,
                              l,
                              [sload, 7 <self.total_prevdyn_deposits>],
                              [with,
                                ans,
                                [mul, l, r],
                                [seq, [assert, [or, [eq, [sdiv, ans, l], r], [not, l]]], ans]]]],
                          [mload, 128]],
                        3],
                      [mload, 128]]]],
                [iszero,
                  [sload,
                    [add,
                      [sha3_32, [add, [sha3_32, 10 <self.votes>], [mload, 384 <target_epoch>]]],
                      2 <is_justified>]]]],
              # Line 449
              [seq,
                [sstore,
                  [add,
                    [sha3_32, [add, [sha3_32, 10 <self.votes>], [mload, 384 <target_epoch>]]],
                    2 <is_justified>],
                  1],
                # Line 450
                [sstore, 17 <self.last_justified_epoch>, [mload, 384 <target_epoch>]],
                # Line 451
                [sstore, 11 <self.main_hash_justified>, 1],
                # Line 454
                [mstore, 1024, 1],
                [mstore, 1056, 0],
                [log3,
                  1024,
                  64,
                  47607052476070037250388038725579733243894556830711209046796940177296459501753,
                  [mload, 384 <target_epoch>],
                  [sload, [add, [sha3_32, 1 <self.checkpoint_hashes>], [mload, 384 <target_epoch>]]]],
                # Line 458
                [if,
                  [eq,
                    [mload, 384 <target_epoch>],
                    [clamp, [mload, 96], [add, [mload, 416 <source_epoch>], 1], [mload, 64]]],
                  # Line 459
                  [seq,
                    [sstore,
                      [add,
                        [sha3_32, [add, [sha3_32, 10 <self.votes>], [mload, 416 <source_epoch>]]],
                        1 <is_finalized>],
                      1],
                    # Line 460
                    [sstore, 16 <self.last_finalized_epoch>, [mload, 416 <source_epoch>]],
                    # Line 462
                    [mstore, 1088, 1],
                    [mstore, 1120, 1],
                    [log3,
                      1088,
                      64,
                      47607052476070037250388038725579733243894556830711209046796940177296459501753,
                      [mload, 416 <source_epoch>],
                      [sload, [add, [sha3_32, 1 <self.checkpoint_hashes>], [mload, 416 <source_epoch>]]]]]]]],
            # Line 465
            [mstore, 1152, [mload, 384 <target_epoch>]],
            [mstore, 1184, [mload, 416 <source_epoch>]],
            [log4,
              1152,
              64,
              7081665583020273161205225158852481246505534847476758391289152486542138437399,
              [sload,
                [add,
                  [sha3_32, [add, [sha3_32, 0 <self.validators>], [mload, 320 <validator_index>]]],
                  4 <withdrawal_addr>]],
              [mload, 320 <validator_index>],
              [mload, 352 <target_hash>]],
            # Line 389
            stop]],
        # Line 469
        [if,
          [eq, [mload, 0], 3424711019 <slash>],
          [seq,
            [calldatacopy, 320, 4, 64],
            [assert, [iszero, callvalue]],
            [calldatacopy, 384, [add, 4, [calldataload, 4]], 1056],
            [assert, [le, [calldataload, [add, 4, [calldataload, 4]]], 1024]],
            [calldatacopy, 1472, [add, 4, [calldataload, 36]], 1056],
            [assert, [le, [calldataload, [add, 4, [calldataload, 36]]], 1024]],
            [mstore,
              2560,
              [with,
                _sub,
                [seq,
                  [with,
                    _source,
                    384 <vote_msg_1>,
                    [with,
                      _sz,
                      [add, 32, [mload, _source]],
                      [assert, [call, [add, 18, [div, _sz, 10]], 4, 0, _source, _sz, 2592, _sz]]]],
                  [assert, [call, 200000, [sload, 25 <self.SIGHASHER>], 0, 2624, [mload, 2592], 3712, 32]],
                  [mstore, 3680, 32],
                  3680],
                [mload,
                  [add,
                    _sub,
                    [add, 32, [mul, 32, [div, [clample, 0, [sub, [mload, _sub], 32]], 32]]]]]]],
            # Line 473
            [with,
              _L,
              5408 <values_1>,
              [seq,
                [mstore,
                  _L,
                  [seq,
                    [with,
                      _sub,
                      384 <vote_msg_1>,
                      [pop,
                        [call,
                          3520,
                          465412500301844688126265256059331081527636616969 <RLP decoder>,
                          0,
                          [add, _sub, 32],
                          [mload, _sub],
                          3776,
                          1568]]],
                    [assert, [eq, [mload, 3776], 192]],
                    /* bytearray to number (int128) */ 
                    [with,
                      _sub,
                      /* getting and checking int128 */ [add, 3776, [mload, 3776]],
                      [with,
                        _el1,
                        [mload, [add, 32, _sub]],
                        [with,
                          _len,
                          [clamp, 0, [mload, _sub], 32],
                          [clamp, [mload, 96], [div, _el1, [exp, 256, [sub, 32, _len]]], [mload, 64]]]]]]],
                [mstore,
                  [add, 32, _L],
                  [seq,
                    [assert, [eq, [mload, [add, 3776, [mload, 3808]]], 32]],
                    [mload, [add, 3808, [mload, 3808]]]]],
                [mstore,
                  [add, 64, _L],
                  [with,
                    _sub,
                    /* getting and checking int128 */ [add, 3776, [mload, 3840]],
                    [with,
                      _el1,
                      [mload, [add, 32, _sub]],
                      [with,
                        _len,
                        [clamp, 0, [mload, _sub], 32],
                        [clamp, [mload, 96], [div, _el1, [exp, 256, [sub, 32, _len]]], [mload, 64]]]]]],
                [mstore,
                  [add, 96, _L],
                  [with,
                    _sub,
                    /* getting and checking int128 */ [add, 3776, [mload, 3872]],
                    [with,
                      _el1,
                      [mload, [add, 32, _sub]],
                      [with,
                        _len,
                        [clamp, 0, [mload, _sub], 32],
                        [clamp, [mload, 96], [div, _el1, [exp, 256, [sub, 32, _len]]], [mload, 64]]]]]],
                [with,
                  _source,
                  /* getting byte array */ [add, 3776, [mload, 3904]],
                  [with,
                    _sz,
                    [add, 32, [mload, _source]],
                    [assert, [call, [add, 18, [div, _sz, 10]], 4, 0, _source, _sz, [add, 128, _L], _sz]]]]]],
            # Line 469
            [mstore, 6624, [mload, 5408 <0+values_1>]],
            [mstore, 6656, [mload, 5472 <64+values_1>]],
            [mstore, 6688, [mload, 5504 <96+values_1>]],
            [with,
              _source,
              5536 <128+values_1>,
              [with,
                _sz,
                [add, 32, [mload, _source]],
                [assert, [call, [add, 18, [div, _sz, 10]], 4, 0, _source, _sz, 6720, _sz]]]],
            # Line 479
            [assert,
              [eq,
                /* extracting 32 bytes */ 
                [with,
                  _sub,
                  [seq,
                    [with,
                      _source,
                      /* concat */ 
                      [with,
                        _poz,
                        0,
                        [seq,
                          [mstore, [add, [add, 7808, _poz], 32], [mload, 2560 <sighash_1>]],
                          [set, _poz, [add, _poz, 32]],
                          [with,
                            _arg,
                            6720 <sig_1>,
                            [seq,
                              /* copy byte slice */ 
                              [with,
                                _l,
                                1024,
                                [pop, [call, 120, 4, 0, [add, _arg, 32], _l, [add, [add, 7808, _poz], 32], _l]]],
                              [set, _poz, [add, _poz, [mload, _arg]]]]],
                          [mstore, 7808, _poz],
                          7808]],
                      [with,
                        _sz,
                        [add, 32, [mload, _source]],
                        [assert, [call, [add, 18, [div, _sz, 10]], 4, 0, _source, _sz, 8928, _sz]]]],
                    [assert,
                      [call,
                        500000,
                        [sload, [sha3_32, [add, [sha3_32, 0 <self.validators>], [mload, 6624 <validator_index_1>]]]],
                        0,
                        8960,
                        [mload, 8928],
                        10080,
                        32]],
                    [mstore, 10048, 32],
                    10048],
                  [mload,
                    [add,
                      _sub,
                      [add, 32, [mul, 32, [div, [clample, 0, [sub, [mload, _sub], 32]], 32]]]]]],
                1]],
            # Line 469
            [mstore,
              10144,
              [with,
                _sub,
                [seq,
                  [with,
                    _source,
                    1472 <vote_msg_2>,
                    [with,
                      _sz,
                      [add, 32, [mload, _source]],
                      [assert, [call, [add, 18, [div, _sz, 10]], 4, 0, _source, _sz, 10176, _sz]]]],
                  [assert,
                    [call,
                      200000,
                      [sload, 25 <self.SIGHASHER>],
                      0,
                      10208,
                      [mload, 10176],
                      11296,
                      32]],
                  [mstore, 11264, 32],
                  11264],
                [mload,
                  [add,
                    _sub,
                    [add, 32, [mul, 32, [div, [clample, 0, [sub, [mload, _sub], 32]], 32]]]]]]],
            # Line 482
            [with,
              _L,
              12992 <values_2>,
              [seq,
                [mstore,
                  _L,
                  [seq,
                    [with,
                      _sub,
                      1472 <vote_msg_2>,
                      [pop,
                        [call,
                          3520,
                          465412500301844688126265256059331081527636616969 <RLP decoder>,
                          0,
                          [add, _sub, 32],
                          [mload, _sub],
                          11360,
                          1568]]],
                    [assert, [eq, [mload, 11360], 192]],
                    /* bytearray to number (int128) */ 
                    [with,
                      _sub,
                      /* getting and checking int128 */ [add, 11360, [mload, 11360]],
                      [with,
                        _el1,
                        [mload, [add, 32, _sub]],
                        [with,
                          _len,
                          [clamp, 0, [mload, _sub], 32],
                          [clamp, [mload, 96], [div, _el1, [exp, 256, [sub, 32, _len]]], [mload, 64]]]]]]],
                [mstore,
                  [add, 32, _L],
                  [seq,
                    [assert, [eq, [mload, [add, 11360, [mload, 11392]]], 32]],
                    [mload, [add, 11392, [mload, 11392]]]]],
                [mstore,
                  [add, 64, _L],
                  [with,
                    _sub,
                    /* getting and checking int128 */ [add, 11360, [mload, 11424]],
                    [with,
                      _el1,
                      [mload, [add, 32, _sub]],
                      [with,
                        _len,
                        [clamp, 0, [mload, _sub], 32],
                        [clamp, [mload, 96], [div, _el1, [exp, 256, [sub, 32, _len]]], [mload, 64]]]]]],
                [mstore,
                  [add, 96, _L],
                  [with,
                    _sub,
                    /* getting and checking int128 */ [add, 11360, [mload, 11456]],
                    [with,
                      _el1,
                      [mload, [add, 32, _sub]],
                      [with,
                        _len,
                        [clamp, 0, [mload, _sub], 32],
                        [clamp, [mload, 96], [div, _el1, [exp, 256, [sub, 32, _len]]], [mload, 64]]]]]],
                [with,
                  _source,
                  /* getting byte array */ [add, 11360, [mload, 11488]],
                  [with,
                    _sz,
                    [add, 32, [mload, _source]],
                    [assert, [call, [add, 18, [div, _sz, 10]], 4, 0, _source, _sz, [add, 128, _L], _sz]]]]]],
            # Line 469
            [mstore, 14208, [mload, 12992 <0+values_2>]],
            [mstore, 14240, [mload, 13056 <64+values_2>]],
            [mstore, 14272, [mload, 13088 <96+values_2>]],
            [with,
              _source,
              13120 <128+values_2>,
              [with,
                _sz,
                [add, 32, [mload, _source]],
                [assert, [call, [add, 18, [div, _sz, 10]], 4, 0, _source, _sz, 14304, _sz]]]],
            # Line 488
            [assert,
              [eq,
                /* extracting 32 bytes */ 
                [with,
                  _sub,
                  [seq,
                    [with,
                      _source,
                      /* concat */ 
                      [with,
                        _poz,
                        0,
                        [seq,
                          [mstore, [add, [add, 15392, _poz], 32], [mload, 10144 <sighash_2>]],
                          [set, _poz, [add, _poz, 32]],
                          [with,
                            _arg,
                            14304 <sig_2>,
                            [seq,
                              /* copy byte slice */ 
                              [with,
                                _l,
                                1024,
                                [pop, [call, 120, 4, 0, [add, _arg, 32], _l, [add, [add, 15392, _poz], 32], _l]]],
                              [set, _poz, [add, _poz, [mload, _arg]]]]],
                          [mstore, 15392, _poz],
                          15392]],
                      [with,
                        _sz,
                        [add, 32, [mload, _source]],
                        [assert, [call, [add, 18, [div, _sz, 10]], 4, 0, _source, _sz, 16512, _sz]]]],
                    [assert,
                      [call,
                        500000,
                        [sload, [sha3_32, [add, [sha3_32, 0 <self.validators>], [mload, 14208 <validator_index_2>]]]],
                        0,
                        16544,
                        [mload, 16512],
                        17664,
                        32]],
                    [mstore, 17632, 32],
                    17632],
                  [mload,
                    [add,
                      _sub,
                      [add, 32, [mul, 32, [div, [clample, 0, [sub, [mload, _sub], 32]], 32]]]]]],
                1]],
            # Line 490
            [assert, [eq, [mload, 6624 <validator_index_1>], [mload, 14208 <validator_index_2>]]],
            # Line 492
            [assert, [ne, [mload, 2560 <sighash_1>], [mload, 10144 <sighash_2>]]],
            # Line 469
            [mstore, 17728, 0],
            # Line 495
            [if,
              [eq, [mload, 6656 <target_epoch_1>], [mload, 14240 <target_epoch_2>]],
              # Line 497
              [seq, [mstore, 17728 <slashing_condition_detected>, 1]],
              # Line 498
              [seq,
                [if,
                  [or,
                    [and,
                      [sgt, [mload, 6656 <target_epoch_1>], [mload, 14240 <target_epoch_2>]],
                      [slt, [mload, 6688 <source_epoch_1>], [mload, 14272 <source_epoch_2>]]],
                    [and,
                      [sgt, [mload, 14240 <target_epoch_2>], [mload, 6656 <target_epoch_1>]],
                      [slt, [mload, 14272 <source_epoch_2>], [mload, 6688 <source_epoch_1>]]]],
                  # Line 501
                  [seq, [mstore, 17728 <slashing_condition_detected>, 1]]]]],
            # Line 502
            [assert, [mload, 17728 <slashing_condition_detected>]],
            # Line 469
            [mstore,
              17760,
              [mload,
                /* Internal Call: deposit_size */ 
                [seq,
                  [assert,
                    [call,
                      gas,
                      address,
                      0,
                      [seq,
                        [mstore, 17792, 2583387884],
                        [mstore, 17824, [mload, 6624 <validator_index_1>]],
                        17820],
                      36,
                      17920,
                      32]],
                  17920]]],
            [mstore,
              17952,
              [if,
                # Line 505
                [slt,
                  [clamp,
                    [mload, 160],
                    [sdiv, [mul, [mload, 17760 <validator_deposit>], 10000000000], 25],
                    [mload, 128]],
                  0],
                [sdiv,
                  [sub,
                    [clamp,
                      [mload, 160],
                      [sdiv, [mul, [mload, 17760 <validator_deposit>], 10000000000], 25],
                      [mload, 128]],
                    9999999999],
                  10000000000],
                [sdiv,
                  [clamp,
                    [mload, 160],
                    [sdiv, [mul, [mload, 17760 <validator_deposit>], 10000000000], 25],
                    [mload, 128]],
                  10000000000]]],
            [mstore,
              17984,
              [clamp,
                [mload, 96],
                [sub, [mload, 17760 <validator_deposit>], [mload, 17952 <slashing_bounty>]],
                [mload, 64]]],
            # Line 507
            [with,
              _stloc,
              20 <self.total_destroyed>,
              [sstore,
                _stloc,
                [clamp,
                  [mload, 96],
                  [add, [sload, _stloc], [mload, 17984 <deposit_destroyed>]],
                  [mload, 64]]]],
            # Line 509
            [mstore, 18016, [mload, 17952 <slashing_bounty>]],
            [mstore, 18048, [mload, 17984 <deposit_destroyed>]],
            [log4,
              18016,
              64,
              82426427645528108535180603888980199209367473484102836287184910813581241622746,
              caller,
              [sload,
                [add,
                  [sha3_32, [add, [sha3_32, 0 <self.validators>], [mload, 6624 <validator_index_1>]]],
                  4 <withdrawal_addr>]],
              [mload, 6624 <validator_index_1>]],
            # Line 469
            [mstore,
              18080,
              [sload,
                [add,
                  [sha3_32, [add, [sha3_32, 0 <self.validators>], [mload, 6624 <validator_index_1>]]],
                  2 <end_dynasty>]]],
            # Line 513
            [if,
              [slt, [sload, 4 <self.dynasty>], [mload, 18080 <end_dynasty>]],
              # Line 514
              [seq,
                [mstore,
                  18112,
                  [sload,
                    [add,
                      [sha3_32, [add, [sha3_32, 0 <self.validators>], [mload, 6624 <validator_index_1>]]],
                      1 <deposit>]]],
                # Line 515
                [with,
                  _stloc,
                  [add,
                    [sha3_32, 5 <self.dynasty_wei_delta>],
                    [clamp, [mload, 96], [add, [sload, 4 <self.dynasty>], 1], [mload, 64]]],
                  [sstore,
                    _stloc,
                    [clamp,
                      [mload, 160],
                      [sub, [sload, _stloc], [mload, 18112 <deposit>]],
                      [mload, 128]]]],
                # Line 519
                [if,
                  [slt, [mload, 18080 <end_dynasty>], [sload, 30 <self.DEFAULT_END_DYNASTY>]],
                  # Line 520
                  [seq,
                    [with,
                      _stloc,
                      [add, [sha3_32, 5 <self.dynasty_wei_delta>], [mload, 18080 <end_dynasty>]],
                      [sstore,
                        _stloc,
                        [clamp,
                          [mload, 160],
                          [add, [sload, _stloc], [mload, 18112 <deposit>]],
                          [mload, 128]]]]]]]],
            # Line 522
            /* Internal Call: delete_validator */ 
            [assert,
              [call,
                gas,
                address,
                0,
                [seq,
                  [mstore, 18144, 28815128],
                  [mstore, 18176, [mload, 6624 <validator_index_1>]],
                  18172],
                36,
                0,
                0]],
            # Line 523
            [assert, [call, 0, caller, [mload, 17952 <slashing_bounty>], 0, 0, 0, 0]],
            # Line 469
            stop]],
        # Line 527
        [if,
          [eq, [mload, 0], 888093169 <owner_withdraw>],
          [seq,
            [assert, [iszero, callvalue]],
            # Line 529
            [assert,
              [call,
                0,
                [sload, 24 <self.OWNER>],
                [sload, 20 <self.total_destroyed>],
                0,
                0,
                0,
                0]],
            # Line 530
            [sstore, 20 <self.total_destroyed>, 0],
            # Line 527
            stop]],
        # Line 534
        [if,
          [eq, [mload, 0], 624724948 <change_owner>],
          [seq,
            [calldatacopy, 320, 4, 32],
            [assert, [iszero, callvalue]],
            /* checking address input */ [uclamplt, [calldataload, 4], [mload, 32]],
            # Line 536
            [if,
              [eq, [sload, 24 <self.OWNER>], caller],
              # Line 537
              [seq, [sstore, 24 <self.OWNER>, [mload, 320 <new_owner>]]]],
            # Line 534
            stop]],
        # Line 13
        [if,
          [eq, [mload, 0], 3166981529 <validators__deposit>],
          [seq,
            [calldatacopy, 320, 4, 32],
            [assert, [iszero, callvalue]],
            /* checking int128 input */ 
            [clamp,
              [mload, 96],
              [calldataload, 4],
              [mload, 64]],
            # Line 15
            [mstore,
              0,
              [sload,
                [add,
                  [sha3_32, [add, [sha3_32, 0 <self.validators>], [mload, 320 <arg0>]]],
                  1 <deposit>]]],
            [return, 0, 32],
            # Line 13
            stop]],
        [if,
          [eq, [mload, 0], 4210640122 <validators__start_dynasty>],
          [seq,
            [calldatacopy, 320, 4, 32],
            [assert, [iszero, callvalue]],
            /* checking int128 input */ 
            [clamp,
              [mload, 96],
              [calldataload, 4],
              [mload, 64]],
            # Line 15
            [mstore,
              0,
              [sload,
                [add,
                  [sha3_32, [add, [sha3_32, 0 <self.validators>], [mload, 320 <arg0>]]],
                  3 <start_dynasty>]]],
            [return, 0, 32],
            # Line 13
            stop]],
        [if,
          [eq, [mload, 0], 3260268353 <validators__end_dynasty>],
          [seq,
            [calldatacopy, 320, 4, 32],
            [assert, [iszero, callvalue]],
            /* checking int128 input */ 
            [clamp,
              [mload, 96],
              [calldataload, 4],
              [mload, 64]],
            # Line 15
            [mstore,
              0,
              [sload,
                [add,
                  [sha3_32, [add, [sha3_32, 0 <self.validators>], [mload, 320 <arg0>]]],
                  2 <end_dynasty>]]],
            [return, 0, 32],
            # Line 13
            stop]],
        [if,
          [eq, [mload, 0], 3137410544 <validators__addr>],
          [seq,
            [calldatacopy, 320, 4, 32],
            [assert, [iszero, callvalue]],
            /* checking int128 input */ 
            [clamp,
              [mload, 96],
              [calldataload, 4],
              [mload, 64]],
            # Line 15
            [mstore,
              0,
              [sload, [sha3_32, [add, [sha3_32, 0 <self.validators>], [mload, 320 <arg0>]]]]],
            [return, 0, 32],
            # Line 13
            stop]],
        [if,
          [eq, [mload, 0], 1572852174 <validators__withdrawal_addr>],
          [seq,
            [calldatacopy, 320, 4, 32],
            [assert, [iszero, callvalue]],
            /* checking int128 input */ 
            [clamp,
              [mload, 96],
              [calldataload, 4],
              [mload, 64]],
            # Line 15
            [mstore,
              0,
              [sload,
                [add,
                  [sha3_32, [add, [sha3_32, 0 <self.validators>], [mload, 320 <arg0>]]],
                  4 <withdrawal_addr>]]],
            [return, 0, 32],
            # Line 13
            stop]],
        # Line 28
        [if,
          [eq, [mload, 0], 2181609589 <checkpoint_hashes>],
          [seq,
            [calldatacopy, 320, 4, 32],
            [assert, [iszero, callvalue]],
            /* checking int128 input */ 
            [clamp,
              [mload, 96],
              [calldataload, 4],
              [mload, 64]],
            # Line 30
            [mstore,
              0,
              [sload, [add, [sha3_32, 1 <self.checkpoint_hashes>], [mload, 320 <arg0>]]]],
            [return, 0, 32],
            # Line 28
            stop]],
        # Line 31
        [if,
          [eq, [mload, 0], 2104083929 <next_validator_index>],
          [seq,
            [assert, [iszero, callvalue]],
            # Line 33
            [mstore, 0, [sload, 2 <self.next_validator_index>]],
            [return, 0, 32],
            # Line 31
            stop]],
        # Line 34
        [if,
          [eq, [mload, 0], 3693107635 <validator_indexes>],
          [seq,
            [calldatacopy, 320, 4, 32],
            [assert, [iszero, callvalue]],
            /* checking address input */ [uclamplt, [calldataload, 4], [mload, 32]],
            # Line 36
            [mstore,
              0,
              [sload, [add, [sha3_32, 3 <self.validator_indexes>], [mload, 320 <arg0>]]]],
            [return, 0, 32],
            # Line 34
            stop]],
        # Line 37
        [if,
          [eq, [mload, 0], 1885341005 <dynasty>],
          [seq,
            [assert, [iszero, callvalue]],
            # Line 39
            [mstore, 0, [sload, 4 <self.dynasty>]],
            [return, 0, 32],
            # Line 37
            stop]],
        # Line 40
        [if,
          [eq, [mload, 0], 3293431385 <dynasty_wei_delta>],
          [seq,
            [calldatacopy, 320, 4, 32],
            [assert, [iszero, callvalue]],
            /* checking int128 input */ 
            [clamp,
              [mload, 96],
              [calldataload, 4],
              [mload, 64]],
            # Line 42
            [mstore,
              0,
              [sload, [add, [sha3_32, 5 <self.dynasty_wei_delta>], [mload, 320 <arg0>]]]],
            [return, 0, 32],
            # Line 40
            stop]],
        # Line 49
        [if,
          [eq, [mload, 0], 2724400046 <dynasty_start_epoch>],
          [seq,
            [calldatacopy, 320, 4, 32],
            [assert, [iszero, callvalue]],
            /* checking int128 input */ 
            [clamp,
              [mload, 96],
              [calldataload, 4],
              [mload, 64]],
            # Line 51
            [mstore,
              0,
              [sload, [add, [sha3_32, 8 <self.dynasty_start_epoch>], [mload, 320 <arg0>]]]],
            [return, 0, 32],
            # Line 49
            stop]],
        # Line 52
        [if,
          [eq, [mload, 0], 1707770086 <dynasty_in_epoch>],
          [seq,
            [calldatacopy, 320, 4, 32],
            [assert, [iszero, callvalue]],
            /* checking int128 input */ 
            [clamp,
              [mload, 96],
              [calldataload, 4],
              [mload, 64]],
            # Line 54
            [mstore,
              0,
              [sload, [add, [sha3_32, 9 <self.dynasty_in_epoch>], [mload, 320 <arg0>]]]],
            [return, 0, 32],
            # Line 52
            stop]],
        # Line 54
        [if,
          [eq, [mload, 0], 4253544349 <votes__cur_dyn_votes>],
          [seq,
            [calldatacopy, 320, 4, 64],
            [assert, [iszero, callvalue]],
            /* checking int128 input */ 
            [clamp,
              [mload, 96],
              [calldataload, 4],
              [mload, 64]],
            /* checking int128 input */ 
            [clamp,
              [mload, 96],
              [calldataload, 36],
              [mload, 64]],
            # Line 56
            [mstore,
              0,
              [sload,
                [add,
                  [sha3_32, [sha3_32, [add, [sha3_32, 10 <self.votes>], [mload, 320 <arg0>]]]],
                  [mload, 352 <arg1>]]]],
            [return, 0, 32],
            # Line 54
            stop]],
        [if,
          [eq, [mload, 0], 1254577867 <votes__prev_dyn_votes>],
          [seq,
            [calldatacopy, 320, 4, 64],
            [assert, [iszero, callvalue]],
            /* checking int128 input */ 
            [clamp,
              [mload, 96],
              [calldataload, 4],
              [mload, 64]],
            /* checking int128 input */ 
            [clamp,
              [mload, 96],
              [calldataload, 36],
              [mload, 64]],
            # Line 56
            [mstore,
              0,
              [sload,
                [add,
                  [sha3_32,
                    [add,
                      [sha3_32, [add, [sha3_32, 10 <self.votes>], [mload, 320 <arg0>]]],
                      3 <prev_dyn_votes>]],
                  [mload, 352 <arg1>]]]],
            [return, 0, 32],
            # Line 54
            stop]],
        [if,
          [eq, [mload, 0], 1711020061 <votes__vote_bitmap>],
          [seq,
            [calldatacopy, 320, 4, 64],
            [assert, [iszero, callvalue]],
            /* checking int128 input */ 
            [clamp,
              [mload, 96],
              [calldataload, 4],
              [mload, 64]],
            /* checking int128 input */ 
            [clamp,
              [mload, 96],
              [calldataload, 36],
              [mload, 64]],
            # Line 56
            [mstore,
              0,
              [sload,
                [add,
                  [sha3_32,
                    [add,
                      [sha3_32, [add, [sha3_32, 10 <self.votes>], [mload, 320 <arg0>]]],
                      4 <vote_bitmap>]],
                  [mload, 352 <arg1>]]]],
            [return, 0, 32],
            # Line 54
            stop]],
        [if,
          [eq, [mload, 0], 3437464997 <votes__is_justified>],
          [seq,
            [calldatacopy, 320, 4, 32],
            [assert, [iszero, callvalue]],
            /* checking int128 input */ 
            [clamp,
              [mload, 96],
              [calldataload, 4],
              [mload, 64]],
            # Line 56
            [mstore,
              0,
              [sload,
                [add,
                  [sha3_32, [add, [sha3_32, 10 <self.votes>], [mload, 320 <arg0>]]],
                  2 <is_justified>]]],
            [return, 0, 32],
            # Line 54
            stop]],
        [if,
          [eq, [mload, 0], 1666130386 <votes__is_finalized>],
          [seq,
            [calldatacopy, 320, 4, 32],
            [assert, [iszero, callvalue]],
            /* checking int128 input */ 
            [clamp,
              [mload, 96],
              [calldataload, 4],
              [mload, 64]],
            # Line 56
            [mstore,
              0,
              [sload,
                [add,
                  [sha3_32, [add, [sha3_32, 10 <self.votes>], [mload, 320 <arg0>]]],
                  1 <is_finalized>]]],
            [return, 0, 32],
            # Line 54
            stop]],
        # Line 68
        [if,
          [eq, [mload, 0], 2574809798 <main_hash_justified>],
          [seq,
            [assert, [iszero, callvalue]],
            # Line 70
            [mstore, 0, [sload, 11 <self.main_hash_justified>]],
            [return, 0, 32],
            # Line 68
            stop]],
        # Line 71
        [if,
          [eq, [mload, 0], 3828381055 <deposit_scale_factor>],
          [seq,
            [calldatacopy, 320, 4, 32],
            [assert, [iszero, callvalue]],
            /* checking int128 input */ 
            [clamp,
              [mload, 96],
              [calldataload, 4],
              [mload, 64]],
            # Line 73
            [mstore,
              0,
              [sload, [add, [sha3_32, 12 <self.deposit_scale_factor>], [mload, 320 <arg0>]]]],
            [return, 0, 32],
            # Line 71
            stop]],
        # Line 73
        [if,
          [eq, [mload, 0], 2319991815 <last_nonvoter_rescale>],
          [seq,
            [assert, [iszero, callvalue]],
            # Line 75
            [mstore, 0, [sload, 13 <self.last_nonvoter_rescale>]],
            [return, 0, 32],
            # Line 73
            stop]],
        # Line 74
        [if,
          [eq, [mload, 0], 3870651238 <last_voter_rescale>],
          [seq,
            [assert, [iszero, callvalue]],
            # Line 76
            [mstore, 0, [sload, 14 <self.last_voter_rescale>]],
            [return, 0, 32],
            # Line 74
            stop]],
        # Line 76
        [if,
          [eq, [mload, 0], 2473768164 <current_epoch>],
          [seq,
            [assert, [iszero, callvalue]],
            # Line 78
            [mstore, 0, [sload, 15 <self.current_epoch>]],
            [return, 0, 32],
            # Line 76
            stop]],
        # Line 77
        [if,
          [eq, [mload, 0], 788498265 <last_finalized_epoch>],
          [seq,
            [assert, [iszero, callvalue]],
            # Line 79
            [mstore, 0, [sload, 16 <self.last_finalized_epoch>]],
            [return, 0, 32],
            # Line 77
            stop]],
        # Line 78
        [if,
          [eq, [mload, 0], 1600198224 <last_justified_epoch>],
          [seq,
            [assert, [iszero, callvalue]],
            # Line 80
            [mstore, 0, [sload, 17 <self.last_justified_epoch>]],
            [return, 0, 32],
            # Line 78
            stop]],
        # Line 81
        [if,
          [eq, [mload, 0], 131920987 <reward_factor>],
          [seq,
            [assert, [iszero, callvalue]],
            # Line 83
            [mstore, 0, [sload, 18 <self.reward_factor>]],
            [return, 0, 32],
            # Line 81
            stop]],
        # Line 84
        [if,
          [eq, [mload, 0], 1526944842 <expected_source_epoch>],
          [seq,
            [assert, [iszero, callvalue]],
            # Line 86
            [mstore, 0, [sload, 19 <self.expected_source_epoch>]],
            [return, 0, 32],
            # Line 84
            stop]],
        # Line 93
        [if,
          [eq, [mload, 0], 2890352299 <EPOCH_LENGTH>],
          [seq,
            [assert, [iszero, callvalue]],
            # Line 95
            [mstore, 0, [sload, 21 <self.EPOCH_LENGTH>]],
            [return, 0, 32],
            # Line 93
            stop]],
        # Line 96
        [if,
          [eq, [mload, 0], 247142186 <WITHDRAWAL_DELAY>],
          [seq,
            [assert, [iszero, callvalue]],
            # Line 98
            [mstore, 0, [sload, 22 <self.WITHDRAWAL_DELAY>]],
            [return, 0, 32],
            # Line 96
            stop]],
        # Line 99
        [if,
          [eq, [mload, 0], 1330502494 <DYNASTY_LOGOUT_DELAY>],
          [seq,
            [assert, [iszero, callvalue]],
            # Line 101
            [mstore, 0, [sload, 23 <self.DYNASTY_LOGOUT_DELAY>]],
            [return, 0, 32],
            # Line 99
            stop]],
        # Line 110
        [if,
          [eq, [mload, 0], 1066029070 <BASE_INTEREST_FACTOR>],
          [seq,
            [assert, [iszero, callvalue]],
            # Line 112
            [mstore, 0, [sload, 27 <self.BASE_INTEREST_FACTOR>]],
            [return, 0, 32],
            # Line 110
            stop]],
        # Line 111
        [if,
          [eq, [mload, 0], 1627864712 <BASE_PENALTY_FACTOR>],
          [seq,
            [assert, [iszero, callvalue]],
            # Line 113
            [mstore, 0, [sload, 28 <self.BASE_PENALTY_FACTOR>]],
            [return, 0, 32],
            # Line 111
            stop]]],
      0]]]
